<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" initialize="init();">
    <!--
         G-Chat Actionscript 3.0 example application:

         Ds.3783
         version 1.0.0
     -->

    <mx:Script>
        import mx.containers.TitleWindow;
        import mx.controls.Alert;
        import mx.controls.CheckBox;
        import mx.core.IFlexDisplayObject;
        import mx.events.CloseEvent;
        import mx.managers.PopUpManager;
        import mx.utils.StringUtil;

        import net.ds3783.chatserver.ChatEvent;
        import net.ds3783.chatserver.ChatServerClient;
        import net.ds3783.chatserver.messages.ChannelListMessage;
        import net.ds3783.chatserver.messages.ClientListMessage;
        import net.ds3783.chatserver.messages.SystemReplyMessage;
        import net.ds3783.chatserver.messages.model.ChannelModel;
        import net.ds3783.chatserver.messages.model.ClientModel;

        private var gClient:ChatServerClient = null;
        private var username:String;
        private var password:String;
        private var popups = [];

        private function addPop(window:IFlexDisplayObject):IFlexDisplayObject {
            if (window) {
                PopUpManager.addPopUp(window, this, true);
                window.move((this.width - window.width) * 0.5, (this.height - window.height) * 0.5);
                popups.push(window);
            }
            return window;
        }

        private function removePop(window:IFlexDisplayObject):IFlexDisplayObject {
            if (window) {
                PopUpManager.removePopUp(window);
                var idx:Number = popups.indexOf(window);
                if (idx >= 0) {
                    popups.splice(idx, 1);
                }
            }
            return window;
        }

        private function init():void {
            view_chat.addEventListener(Event.ADDED, function (e:Event):void {
                if (view_chat_panel) {
                    var btn_crtroom:Button = view_chat_panel.getChildByName("btn_crtroom") as Button;
                    if (btn_crtroom) {
                        btn_crtroom.addEventListener(MouseEvent.CLICK, createRoom);
                    }
                }
            });
        }

        public function initApp():void {
            gClient = new ChatServerClient(true);
            gClient.addEventListener(ChatServerClient.LOGINED, logined);
            gClient.addEventListener(ChatServerClient.LOGIN_ERROR, loginedFail);
            gClient.addEventListener(ChatServerClient.ERROR, onError);
            gClient.addEventListener(ChatServerClient.DISCONNECTED, onDisconnected);

        }

        private function onDisconnected(e:Event):void {
            //reset all cavens
            tf_username.text = "";
            tf_password.text = "";
            while (popups.length > 0) {
                removePop(popups[0]);
            }

            viewstack.selectedChild = view_login;
            Alert.show("Connection lost!");
        }

        private function onError(e:ChatEvent):void {
            var sysmsg:SystemReplyMessage = e.message as SystemReplyMessage;
            Alert.show("[ERROR:" + sysmsg.code + "]" + sysmsg.content, "::..Error..::");
        }

        public function doConnect():void {
            if (gClient == null) {
                initApp();
            }
            bt_enter.setStyle("disabled", "true");

            trace("connecting to :" + tf_host.text + ":" + parseInt(tf_port.text));
            username = tf_username.text;
            password = tf_password.text;

            gClient.connect(tf_host.text, parseInt(tf_port.text), username, password);
            viewstack.selectedChild = view_connecting;
        }

        public function logined(evt:ChatEvent):void {
            viewstack.selectedChild = view_chat;
            gClient.addEventListener(ChatServerClient.CHANNEL_LIST_UPDATE, onChannelListUpdate);
            gClient.addEventListener(ChatServerClient.CLIENT_LIST_UPDATE, onClientListUpdate);
        }

        public function loginedFail(evt:ChatEvent):void {
            viewstack.selectedChild = view_login;
            Alert.show("Login rquest denied,PASSWORD wrong?", "Login ERROR!");
        }

        private function onChannelListUpdate(e:ChatEvent):void {
            var msg:ChannelListMessage = e.message as ChannelListMessage;
            roomList.removeAllChildren();
            for each (var channelModel:ChannelModel in msg.channels) {
                var channel:CheckBox = new CheckBox();
                channel.label = channelModel.name;
                channel.name = channelModel.id.toString();
                channel.setStyle("paddingLeft", "10");
                if (msg.listeningChannels) {
                    for each (var number:Number in msg.listeningChannels) {
                        if (number == channelModel.id) {
                            channel.selected = true;
                        }
                    }
                }
                channel.addEventListener(Event.CHANGE, onChannelChange);
                roomList.addChild(channel);
            }
        }

        private function onClientListUpdate(e:ChatEvent):void {
            var msg:ClientListMessage = e.message as ClientListMessage;
            userList.removeAllChildren();
            for each (var clientModel:ClientModel in msg.clients) {
                var client:Label = new Label();
                client.text = clientModel.name;
                client.name = clientModel.id.toString();
                client.setStyle("paddingLeft", "10");
                trace('client:' + client.text);
                userList.addChild(client);
            }
        }

        private function onChannelChange(evt:Event):void {
            var hasChecked:Boolean = false;
            var currentCheckBox:CheckBox = evt.target as CheckBox;
            for each (var checkBox:CheckBox in roomList.getChildren()) {
                if (checkBox.selected) {
                    hasChecked = true;
                    break;
                }
            }
            if (!hasChecked) {
                trace('exit all Channels now ! PREVENT!');
                currentCheckBox.selected = true;
                return;
            }
            if (currentCheckBox.selected) {
                //joinChannel  currentCheckBox.name 就是channelid
                gClient.joinChannel(currentCheckBox.name);
            } else {
                //exitChannel
                gClient.exitChannel(currentCheckBox.name);
            }
        }

        private function createRoom(e:Event):void {
            //先整一个window
            var sprite:TitleWindow = new TitleWindow();
            sprite.showCloseButton = true;
            sprite.layout = "absolute";
            sprite.height = 100;
            sprite.setStyle("backgroundColor", 0xCCCCCC);

            sprite.title = "::.. RoomName ..::";
            var input:TextArea = new TextArea();
            input.maxChars = 30;
            input.width = 180;
            input.name = "roomName";
            input.height = 32;

            sprite.addChild(input);

            var button:Button = new Button();
            button.label = "Create";
            button.width = 80;
            sprite.addChild(button);
            button.move((input.width - button.width) * 0.5, 35);
            addPop(sprite);
            input.setFocus();


            button.addEventListener(MouseEvent.CLICK, onCreateRoomButtonClick);
            sprite.addEventListener(CloseEvent.CLOSE, function (e:Event):void {
                removePop(sprite);
                button.removeEventListener(MouseEvent.CLICK, onCreateRoomButtonClick);
            });
        }

        private function onCreateRoomButtonClick(e:MouseEvent):void {
            var button:Button = e.target as Button;
            var input:TextArea = button.parent.getChildByName("roomName") as TextArea;
            var errMsg = null;
            input.text = StringUtil.trim(input.text);
            if (input.text) {
                try {
                    gClient.createRoom(input.text);
                } catch (e:Error) {
                    errMsg = e.message;
                }
            } else {
                errMsg = 'Connot create a room WITHOUT a name~!';
            }

            if (errMsg) {
                Alert.show(errMsg, '::..Error');
            } else {
                removePop(button.parent as IFlexDisplayObject);
                button.removeEventListener(MouseEvent.CLICK, onCreateRoomButtonClick);
            }


        }


    </mx:Script>
    <mx:ViewStack id="viewstack" left="10" right="10" top="10" bottom="10" selectedIndex="1">
        <mx:Canvas width="100%" height="100%" id="view_connecting" name="view_connecting">
            <mx:Panel width="362" height="260" layout="absolute" horizontalCenter="0.5" verticalCenter="-7"
                      title="::.. Connection ..::" color="#ffffff">
                <mx:Label y="115" text="Connecting to server ..." horizontalCenter="0.5" width="321" textAlign="center"
                          height="21" fontWeight="bold" fontSize="14" color="#ff0000" id="lb_connStatus"/>
                <mx:Image y="23" source="images/logo.png" horizontalCenter="0"/>
                <mx:ProgressBar y="154" indeterminate="true" enabled="true" horizontalCenter="0" barColor="#0033ff"
                                height="7"/>
            </mx:Panel>
        </mx:Canvas>
        <mx:Canvas width="100%" height="100%" id="view_login">
            <mx:Panel width="440" height="310" layout="absolute" horizontalCenter="0" verticalCenter="1" title="Login"
                      color="#ffffff">
                <mx:TextInput x="134.75" y="100" width="125.75" color="#000000" id="tf_host" textAlign="left"
                              themeColor="#ffcc00" height="24" text="127.0.0.1" editable="true" enabled="true"
                              fontSize="12" maxChars="128"/>
                <mx:TextInput x="313" y="100" maxChars="5" width="53.25" color="#000000" id="tf_port" textAlign="left"
                              themeColor="#ffcc00" height="24" text="6001" editable="true" enabled="true"
                              fontSize="12"/>
                <mx:TextInput x="135" y="132" width="231.25" color="#000000" id="tf_username" textAlign="center"
                              themeColor="#ffcc00" height="24" text="guest" editable="true" enabled="true"
                              fontSize="12" maxChars="128"/>
                <mx:TextInput x="135" y="164" width="231.25" color="#000000" id="tf_password" textAlign="center"
                              themeColor="#ffcc00" height="24" text="guest" editable="true" enabled="true"
                              fontSize="12"/>
                <mx:Label y="102" text="ServerIp:" textAlign="right" color="#800000" fontWeight="bold"
                          horizontalCenter="-120" width="73" height="24" fontSize="12"/>
                <mx:Label y="134" text="Username:" textAlign="right" color="#800000" fontWeight="bold"
                          horizontalCenter="-136" width="105" height="24" fontSize="12"/>
                <mx:Label y="166" text="Password:" textAlign="right" color="#800000" fontWeight="bold"
                          horizontalCenter="-136" width="105" height="24" fontSize="12"/>
                <mx:Label y="102" text="Port:" textAlign="center" color="#800000" fontWeight="bold"
                          horizontalCenter="76" width="38" height="24" fontSize="12"/>
                <mx:Label x="49" y="226" textAlign="center" color="#ff0000" fontWeight="bold" width="322"
                          id="lb_errorMsg"/>
                <mx:Button x="163.5" y="196" label="Connect" width="93" color="#333333" id="bt_enter"
                           themeColor="#ffcc00" click="doConnect()"/>
                <mx:Image x="176.5" y="25" source="images/logo.png"/>
            </mx:Panel>
        </mx:Canvas>
        <mx:Canvas width="100%" height="100%" id="view_logout">
            <mx:Panel width="406" height="200" layout="absolute" horizontalCenter="0.5" verticalCenter="-7"
                      title="::.. Logged out ..::" color="#ffffff">
                <mx:Button y="88" label="Return to login screen" width="198" horizontalCenter="0" color="#333333"
                           themeColor="#ffcc00"/>
                <mx:Label y="45" text="Connection was lost" horizontalCenter="0" width="273" textAlign="center"
                          height="29" fontWeight="bold" fontSize="18" color="#ff0000"/>
            </mx:Panel>
        </mx:Canvas>
        <mx:Canvas width="100%" height="100%" id="view_chat">
            <mx:Panel width="695" height="537" layout="absolute" id="view_chat_panel" horizontalCenter="0"
                      verticalCenter="0.5"
                      title="::.. G-Chat-Demo ..:: ( 0.0.1 )" backgroundColor="#f0f0f0">
                <mx:TextArea x="10" y="37" height="382" width="458" id="ta_chat" fontSize="11" themeColor="#ffcc00"/>

                <mx:VBox x="476" y="273" width="189" height="146" themeColor="#ffff66" borderStyle="solid"
                         id="userList" verticalScrollPolicy="auto" horizontalScrollPolicy="off"
                         backgroundColor="#FFFFFF">

                </mx:VBox>
                <mx:Label x="476" y="18" text=":: ROOM LIST"/>
                <mx:Label x="10" y="18" text=":: CHAT HISTORY"/>
                <mx:Label x="476" y="247" text=":: USER LIST"/>
                <mx:TextInput x="10" y="428" width="289" id="tf_pubmsg" themeColor="#ffcc00"/>
                <mx:Button x="307" y="427" label="Send &gt;&gt;" width="75" themeColor="#ffcc00"/>
                <mx:Button x="390" y="427" label="LOG OUT" width="78" color="#ff0000" themeColor="#ffcc00"/>
                <mx:Button x="476" y="217" label="Create room" width="104" name="btn_crtroom"/>
                <mx:HRule y="457" width="655" left="10" height="14"/>
                <mx:Label text="www.gproject.com" width="655" textAlign="center" color="#333333" y="472"/>
                <mx:VBox x="476" y="37" width="189" height="172" id="roomList" themeColor="#ffcc00"
                         horizontalAlign="left" borderStyle="solid" verticalGap="0" verticalScrollPolicy="auto"
                         horizontalScrollPolicy="off">
                </mx:VBox>

            </mx:Panel>
        </mx:Canvas>
    </mx:ViewStack>
</mx:Application>
